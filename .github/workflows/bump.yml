name: Versioning

on:
  push:
    branches:
      - dev
      - main

env:
  USER_EMAIL: cwkim@deepx.ai
  USER_NAME: cwkimDO

permissions:
  contents: write

jobs:
  bump-dev-version:
    # needs: set-environment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && !contains(github.event.head_commit.message, 'skip bump')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install tools
        run: |
          pip install bump2version

      - name: Set git config
        run: |
          git config --global user.email $USER_EMAIL
          git config --global user.name $USER_NAME

      - name: Get version
        run: |
          VERSION=$(grep 'current_version =' .bumpversion.cfg | cut -d ' ' -f 3)
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version
        id: version_info
        run: |
          NEW_VERSION=$(bump2version patch --no-commit --no-tag --list | grep new_version | sed -r 's/new_version=(.*)/\1/')
          git tag v$NEW_VERSION
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Tag each Bump version commit
        run: |
          git log --format="%H %s" | grep -P 'Bump version: \S+ to \S+' | while read line; do
            COMMIT_HASH=$(echo $line | cut -d ' ' -f1)
            NEW_VERSION_TMP=$(echo $line | grep -oP 'to \K\S+')
            TAG_NAME="v$NEW_VERSION_TMP"

            if git tag -l | grep -qx "$TAG_NAME"; then
              echo "Tag $TAG_NAME already exists. break..."
              break
            else
              echo "Creating tag $TAG_NAME for commit $COMMIT_HASH"
              git tag $TAG_NAME $COMMIT_HASH -m "Tagging version $TAG_NAME"
            fi
          done

      - name: Generate CHANGELOG.md
        uses: orhun/git-cliff-action@v3.0.2
        id: git-cliff
        with:
          config: '.cliff.toml'
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md

      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"

      - name: Commit changes
        run: |
          git add .
          git commit -m "Bump version: $CURRENT_VERSION to $NEW_VERSION"
          git push

  bump-main-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'skip bump')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install tool
      run: pip install bump2version

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        prefix: v

    - name: Get Next Version
      id: semver
      uses: ietf-tools/semver-action@v1
      with:
        token: ${{ github.token }}
        branch: main
        majorList: break, BREAKING CHANGE
        minorList: feat
        patchList: fix, perf, refactor, test
    - name: print
      run: |
        echo "next: ${{ steps.semver.outputs.next }}"

    # - name: Get next minor version
    #   id: semvers
    #   uses: "WyriHaximus/github-action-next-semvers@v1"
    #   with:
    #     version: ${{ steps.previoustag.outputs.tag }}

    # - name: nexversion print
    #   run: |
    #     echo "${{ steps.semvers.outputs.major }} ${{ steps.semvers.outputs.minor }} ${{ steps.semvers.outputs.patch }}"
    #     echo "${{ steps.semvers.outputs.v_major }} ${{ steps.semvers.outputs.v_minor }} ${{ steps.semvers.outputs.v_patch }}"
  #     - name: Update version
  #       run: |
  #         git config --local user.email $USER_EMAIL
  #         git config --local user.name $USER_NAME
  #         bump2version patch --allow-dirty

  #     - name: Tag version
  #       run: |
  #         git push --follow-tags
  #         git remote set-url origin https://actions:${{ secrets.GITHUB_TOKEN }}@github.com/cheolwonkim/test.git
