name: Draft a new release

on:
  push:
    branches:
      - main

env:
  USER_EMAIL: cwkim@deepx.ai
  USER_NAME: cwkimDO

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  generate-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'ci-skip') && !contains(github.event.head_commit.message, 'bump-skip') && !contains(github.event.head_commit.message, 'hotfix')
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set git config
      run: |
        git config --global user.email $USER_EMAIL
        git config --global user.name $USER_NAME

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Get version
      run: |
        VERSION=$(grep 'current_version =' .bumpversion.cfg | cut -d ' ' -f 3)
        echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Find previous version tag
      run: |
        echo "PREVIOUS_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        echo "PREVIOUS_TAG: $PREVIOUS_TAG"

    - name: Build change log
      id: build_change_log
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        token: ${{ secrets.GH_TOKEN }}
        fromTag: v${{ env.CURRENT_VERSION }}
        toTag: ${{ env.PREVIOUS_TAG }}

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
          tag: v${{ env.CURRENT_VERSION }}
          body: ${{steps.build_change_log.outputs.changelog}}
          generateReleaseNotes : true
          allowUpdates: true
          makeLatest: true
